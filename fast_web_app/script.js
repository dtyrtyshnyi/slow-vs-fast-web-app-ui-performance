// –§–Ü–ö–° 1: –í–∫–∞–∑—É—î–º–æ URL "—Ö–æ—Ä–æ—à–æ–≥–æ" API, —è–∫–∏–π –ø—Ä–∞—Ü—é—î –Ω–∞ –ø–æ—Ä—Ç—ñ 4001
// const API_HOST = 'localhost:4001'; // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ 'host.docker.internal' –¥–ª—è Docker
const API_HOST = '192.168.0.103:4001'; // –ê–¥—Ä–µ—Å–∞ –≤ –ª–æ–∫–∞–ª—å–Ω—ñ–π –º–µ—Ä–µ–∂—ñ, —â–æ–± –º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –∑ —ñ–Ω—à–æ–≥–æ –ü–ö
const API_URL = `http://${API_HOST}/api/products`;

// –§–Ü–ö–° 2: –ü–æ–≤–Ω—ñ—Å—Ç—é –≤–∏–¥–∞–ª–µ–Ω–æ 'blockClientThread(200)'.
// –ú–∏ –±—ñ–ª—å—à–µ –Ω–µ –±–ª–æ–∫—É—î–º–æ –≥–æ–ª–æ–≤–Ω–∏–π –ø–æ—Ç—ñ–∫ –∫–ª—ñ—î–Ω—Ç–∞
// —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–º JavaScript. –¶–µ –¥—Ä–∞–º–∞—Ç–∏—á–Ω–æ –ø–æ–∫—Ä–∞—â–∏—Ç—å TBT.

document.addEventListener('DOMContentLoaded', () => {
    // –õ–æ–≥—ñ–∫–∞, —è–∫ —ñ —Ä–∞–Ω—ñ—à–µ, –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM
    loadProducts();

    // –§–Ü–ö–° 3 (CLS): –¶–µ–π –∫–æ–¥ –±—ñ–ª—å—à–µ –Ω–µ —Å–ø—Ä–∏—á–∏–Ω—è—î CLS,
    // –æ—Å–∫—ñ–ª—å–∫–∏ –≤ HTML/CSS –º–∏ –∑–∞—Ä–µ–∑–µ—Ä–≤—É–≤–∞–ª–∏ –º—ñ—Å—Ü–µ
    // –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–ª–∞—Å—É .banner-placeholder.
    setTimeout(() => {
        const bannerContainer = document.getElementById('dynamic-banner-container');
        if (bannerContainer) {
            // –û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ: –ø—Ä–∏–±–∏—Ä–∞—î–º–æ –∫–ª–∞—Å-–ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
            bannerContainer.classList.remove('banner-placeholder'); 
            
            const banner = document.createElement('div');
            banner.className = 'dynamic-banner';
            banner.textContent = 'üî• Flash Sale! Everything 50% off! üî•';
            // –û—á–∏—â—É—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (—è–∫—â–æ —Ç–∞–º –±—É–≤ —è–∫–∏–π—Å—å —Ç–µ–∫—Å—Ç) —ñ –¥–æ–¥–∞—î–º–æ –±–∞–Ω–µ—Ä
            bannerContainer.innerHTML = ''; 
            bannerContainer.appendChild(banner);
        }
    }, 1000); 
});

// -----------------------------------------------------------------
// *** –§–Ü–ö–° 4: –ü–ê–†–ê–õ–ï–õ–¨–ù–ï –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –ï–§–ï–ö–¢–ò–í–ù–ò–ô —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ ***
// -----------------------------------------------------------------

/**
 * –î–æ–ø–æ–º—ñ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è: –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î –æ–¥–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è (–∑–∞–ª–∏—à–∏–ª–∞—Å—è —Ç–∞ —Å–∞–º–∞)
 */
function loadImage(src) {
    return new Promise((resolve, reject) => {
        const img = new Image();
        img.onload = () => resolve(img);
        img.onerror = (err) => reject(new Error(`Failed to load image: ${src}`, { cause: err }));
        img.src = src;
    });
}

/**
 * –§–Ü–ö–° 4.1: –ù–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è.
 * –í–æ–Ω–∞ –∑–∞–º—ñ–Ω–∏—Ç—å 'renderProductsSequentially'.
 */
async function renderProductsInParallel(products) {
    const grid = document.getElementById('product-grid');
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ –º–∞—Å–∏–≤ "–ø—Ä–æ–º—ñ—Å—ñ–≤" –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å.
    // –ö–æ–∂–µ–Ω 'loadImage' –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –ù–ï–ì–ê–ô–ù–û, –Ω–µ —á–µ–∫–∞—é—á–∏ –Ω–∞ —ñ–Ω—à–∏—Ö.
    const loadPromises = products.map(product => {
        // –§–Ü–ö–° 5: –ú–∏ –∑–∞–ø–∏—Ç—É—î–º–æ –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω—ñ .webp –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        // (API 'v2_good' –≤–∂–µ –Ω–∞–¥–∞—î –Ω–∞–º —Ü—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è)
        return loadImage(product.imageUrl)
            .then(img => ({ product, img, status: 'fulfilled' })) // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —ñ –ø—Ä–æ–¥—É–∫—Ç, —ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            .catch(error => {
                console.error(error);
                return { product, img: null, status: 'rejected' }; // –û–±—Ä–æ–±–ª—è—î–º–æ –ø–æ–º–∏–ª–∫—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            });
    });

    // *** –ì–û–õ–û–í–ù–ò–ô –§–Ü–ö–° ***
    // –ß–µ–∫–∞—î–º–æ, –¥–æ–∫–∏ –í–°–Ü –ø—Ä–æ–º—ñ—Å–∏ –≤ 'loadPromises' –Ω–µ –≤–∏–∫–æ–Ω–∞—é—Ç—å—Å—è.
    // –û—Å–∫—ñ–ª—å–∫–∏ –≤–æ–Ω–∏ –≤—Å—ñ –±—É–ª–∏ –∑–∞–ø—É—â–µ–Ω—ñ –æ–¥–Ω–æ—á–∞—Å–Ω–æ, –±—Ä–∞—É–∑–µ—Ä
    // –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç—å —ó—Ö –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ (–ø–∞—á–∫–∞–º–∏ –ø–æ ~6).
    const results = await Promise.all(loadPromises);

    // –§–Ü–ö–° 4.2: –ï—Ñ–µ–∫—Ç–∏–≤–Ω–∏–π DOM-—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥
    // –°—Ç–≤–æ—Ä—é—î–º–æ DocumentFragment. –¶–µ —è–∫ "—á–æ—Ä–Ω–æ–≤–∏–∫" DOM,
    // –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ —è–∫–∏–º –Ω–µ —Å–ø—Ä–∏—á–∏–Ω—è—é—Ç—å reflow/repaint.
    const fragment = document.createDocumentFragment();

    for (const { product, img } of results) {
        // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–∞—Ä—Ç–∫—É (—è–∫ —ñ —Ä–∞–Ω—ñ—à–µ)
        const card = document.createElement('div');
        card.className = 'product-card';
        
        if (img) {
            img.alt = product.name;
            card.appendChild(img);
        } else {
            // –Ø–∫—â–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–æ—Å—å, –ø–æ–∫–∞–∑—É—î–º–æ –∑–∞–≥–ª—É—à–∫—É
            const errorPlaceholder = document.createElement('div');
            errorPlaceholder.className = 'image-error-placeholder';
            errorPlaceholder.textContent = 'Image failed to load';
            card.appendChild(errorPlaceholder);
        }
        
        const title = document.createElement('h3');
        title.textContent = product.name;
        card.appendChild(title);
        
        const desc = document.createElement('p');
        desc.textContent = product.description;
        card.appendChild(desc);

        // –î–æ–¥–∞—î–º–æ –≥–æ—Ç–æ–≤—É –∫–∞—Ä—Ç–∫—É —É "—á–æ—Ä–Ω–æ–≤–∏–∫", –∞ –Ω–µ –≤ —Ä–µ–∞–ª—å–Ω–∏–π DOM
        fragment.appendChild(card);
    }

    // –û—á–∏—â—É—î–º–æ –≤—Å—ñ "—Å–∫–µ–ª–µ—Ç–æ–Ω–∏"
    grid.innerHTML = '';
    // –í—Å—Ç–∞–≤–ª—è—î–º–æ –í–°–Ü 9 –∫–∞—Ä—Ç–æ–∫ –≤ DOM –∑–∞ –û–î–ù–£ –æ–ø–µ—Ä–∞—Ü—ñ—é.
    // –¶–µ –Ω–∞–±–∞–≥–∞—Ç–æ —à–≤–∏–¥—à–µ, –Ω—ñ–∂ 9 –æ–∫—Ä–µ–º–∏—Ö 'appendChild'.
    grid.appendChild(fragment);
    
    console.log('üöÄ All parallel loading and efficient render finished.');
}


/**
 * –§—É–Ω–∫—Ü—ñ—è, —â–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î –¥–∞–Ω—ñ –∑ API
 */
async function loadProducts() {
    const grid = document.getElementById('product-grid');
    
    try {
        // –ó–∞–ø–∏—Ç —Ç–µ–ø–µ—Ä —ñ–¥–µ –Ω–∞ —à–≤–∏–¥–∫–∏–π 'v2_good' API
        const response = await fetch(API_URL);
        
        if (!response.ok) {
            throw new Error(`Server error! Status: ${response.status}`);
        }
        
        const products = await response.json();
        
        // *** –í–ò–ö–õ–ò–ö–ê–Ñ–ú–û –ù–û–í–£ "–®–í–ò–î–ö–£" –§–£–ù–ö–¶–Ü–Æ ***
        await renderProductsInParallel(products);

    } catch (error) {
        console.error("Failed to load products:", error);
        if (grid) {
            // –ó–∞–º—ñ–Ω—é—î–º–æ —Å–∫–µ–ª–µ—Ç–æ–Ω–∏ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            grid.innerHTML = `<div class="error">Failed to load products. Please check your connection or try again later.</div>`;
        }
    }
}